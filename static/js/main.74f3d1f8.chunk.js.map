{"version":3,"sources":["functions.js","components/Timer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["handleIncrement","setState","length","handleDecrement","convertMinutesToMilliseconds","timeInSeconds","timeToString","time","diffInMin","mm","Math","floor","toString","padStart","diffInSec","ss","pimp","Timer","breakLength","sessionLength","setBreakLength","setSessionLength","breakMilliseconds","sessionMilliseconds","useState","sessionTime","setSessionTime","display","setDisplay","startTime","isTiming","useRef","timerTime","timeInterval","sessionOrBreak","handleStartAndStop","current","clearInterval","Date","now","setInterval","reset","sound","document","getElementById","pause","currentTime","stopSound","useEffect","play","playSound","id","onClick","src","App","className","newLength","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.74f3d1f8.chunk.js","sourcesContent":["export function handleIncrement(setState, length) {\r\n  if(length >= 60) {\r\n    setState(60);\r\n    return;\r\n  }\r\n  setState(length + 1);\r\n}\r\n\r\nexport function handleDecrement(setState, length) {\r\n  if(length <= 1) {\r\n    setState(1);\r\n    return;\r\n  }\r\n  setState(length - 1);\r\n}\r\n\r\nexport function convertMinutesToMilliseconds(timeInSeconds) {\r\n  return (timeInSeconds * 1000) * 60;\r\n}\r\n\r\nexport function timeToString(time) {\r\n  var diffInHr = time / 3600000;\r\n  // var hh = Math.floor(diffInHr).toString().padStart(2, \"0\");\r\n  // var diffInMin = (diffInHr - hh) * 60; this is the original\r\n  var diffInMin = (diffInHr) * 60;\r\n  var mm = Math.floor(diffInMin).toString().padStart(2, \"0\");\r\n  var diffInSec = (diffInMin - mm) * 60;\r\n  var ss = Math.floor(diffInSec).toString().padStart(2, \"0\");\r\n  // var diffInMs = (diffInSec - ss) * 100;\r\n  // var ms = Math.floor(diffInMs).toString().padStart(2, \"0\");\r\n  return `${mm}:${ss}`;\r\n}\r\n\r\nfunction pimp() {\r\n  console.log('pimp');\r\n  return 'pimp';\r\n}\r\n\r\nexport default pimp;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport {timeToString, convertMinutesToMilliseconds} from '../functions.js';\r\n\r\nconst Timer = ({breakLength, sessionLength, setBreakLength, setSessionLength}) => {\r\n\r\n  var breakMilliseconds = convertMinutesToMilliseconds(breakLength);\r\n  var sessionMilliseconds = convertMinutesToMilliseconds(sessionLength);\r\n\r\n  const [sessionTime, setSessionTime] = useState(sessionLength);\r\n  // const [breakTime, setBreakTime] = useState(breakLength);\r\n\r\n  const [display, setDisplay] = useState(timeToString(sessionMilliseconds));\r\n\r\n  var startTime = 0;\r\n\r\n  var isTiming = useRef(false);\r\n  var timerTime = useRef(sessionMilliseconds);\r\n  var timeInterval = useRef(0);\r\n  var sessionOrBreak = useRef('session');\r\n\r\n  useEffect(() => {\r\n    if(isTiming.current === false) {\r\n      if(sessionLength !== sessionTime) {\r\n        breakMilliseconds = convertMinutesToMilliseconds(breakLength);\r\n        sessionMilliseconds = convertMinutesToMilliseconds(sessionLength);\r\n        timerTime.current = sessionMilliseconds;\r\n        setSessionTime(sessionLength);\r\n        setDisplay(timeToString(convertMinutesToMilliseconds(sessionLength)))\r\n      }\r\n    }\r\n  }, [sessionLength, breakLength]);\r\n\r\n  useEffect(() => {\r\n    if(display === '00:00') {\r\n      playSound();\r\n    }\r\n\r\n  }, [display]);\r\n\r\n  function handleStartAndStop() {\r\n    if(isTiming.current) {\r\n      isTiming.current = false;\r\n      clearInterval(timeInterval.current);\r\n    } else {\r\n      isTiming.current = true;\r\n      start();\r\n    }\r\n  }\r\n\r\n  function start() {\r\n    startTime = Date.now();\r\n    isTiming.current = true;\r\n    timeInterval.current = setInterval(() => {\r\n      timerTime.current -= (Date.now() - startTime);\r\n      startTime = Date.now();\r\n      if(timerTime.current <= 0) {\r\n        timerTime.current = sessionOrBreak.current === 'session' ? breakMilliseconds : sessionMilliseconds;\r\n        sessionOrBreak.current = sessionOrBreak.current === 'session' ? 'break' : 'session';\r\n      }\r\n      setDisplay(timeToString(timerTime.current));\r\n    }, 5);\r\n  }\r\n\r\n  function reset() {\r\n      stopSound();\r\n      if(isTiming.current === true) {\r\n      clearInterval(timeInterval.current);\r\n      isTiming.current = false;\r\n      setSessionLength(25);\r\n      setBreakLength(5);\r\n      setDisplay(timeToString(sessionMilliseconds));\r\n      timerTime.current = sessionMilliseconds;\r\n      sessionOrBreak.current = 'session';\r\n    } else {\r\n      clearInterval(timeInterval.current);\r\n      setSessionLength(25);\r\n      setBreakLength(5);\r\n      setDisplay(timeToString(sessionMilliseconds));\r\n      timerTime.current = sessionMilliseconds;\r\n      sessionOrBreak.current = 'session';\r\n    }\r\n  }\r\n\r\n  function playSound() {\r\n    const sound = document.getElementById('beep');\r\n    sound.currentTime = 0;\r\n    sound.play();\r\n  }\r\n\r\n  function stopSound() {\r\n    const sound = document.getElementById('beep');\r\n    sound.pause();\r\n    sound.currentTime = 0;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"timer-label\">\r\n        {sessionOrBreak.current === 'session' ? 'SESSION' : 'BREAK'}\r\n      </div>\r\n      <div id=\"time-left\">{display}</div>\r\n      <button\r\n         id=\"start_stop\"\r\n         onClick={() => handleStartAndStop()}\r\n      >Start / Stop</button>\r\n      <button \r\n        id=\"reset\"\r\n        onClick={() => reset()}\r\n      >Reset</button>\r\n      <audio \r\n        id='beep'\r\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n      ></audio>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import { useState } from 'react';\nimport {handleIncrement, handleDecrement} from './functions.js';\nimport './App.css';\nimport Timer from './components/Timer';\n\nfunction App() {\n\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n\n  return (\n    <div className=\"App\">\n      <div className=\"controls\">\n        <div>\n          <div id=\"break-label\">\n            Break Length\n          </div>\n          <button \n            id=\"break-increment\"\n            onClick={() => handleIncrement(setBreakLength, breakLength)}\n          >up</button>\n          <div\n            id=\"break-length\"\n          >{breakLength}</div>\n          <button \n            id=\"break-decrement\"\n            onClick={() => handleDecrement(setBreakLength, breakLength)}\n          >down</button>\n        </div>\n        <div>\n          <div id=\"session-label\">\n            Session Length\n          </div>\n          <button \n            id=\"session-increment\"\n            onClick={() => handleIncrement(setSessionLength, sessionLength)}\n          >up</button>\n          <div\n            id=\"session-length\"\n          >{sessionLength}</div>\n          <button \n            id=\"session-decrement\"\n            onClick={() => handleDecrement(setSessionLength, sessionLength)}\n          >down</button>\n        </div>\n      </div>\n\n      <Timer \n        breakLength={breakLength} \n        sessionLength={sessionLength}\n        setBreakLength={(newLength) => setBreakLength(newLength)}\n        setSessionLength={(newLength) => setSessionLength(newLength)}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}